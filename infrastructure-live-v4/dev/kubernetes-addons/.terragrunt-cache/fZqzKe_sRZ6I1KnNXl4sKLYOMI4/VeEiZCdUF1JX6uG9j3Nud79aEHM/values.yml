commonLabels:
  project: gd9

namespaceOverride: "monitoring"
defaultRules:
  create: false

alertmanager:
  enabled: true
  resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 10m
      memory: 32Mi

nodeExporter:
  enabled: true

prometheus-node-exporter:
  namespaceOverride: "monitoring"
  podLabels:
    jobLabel: node-exporter
  releaseLabel: true
  extraArgs:
    - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
    - --collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
  service:
    portName: http-metrics

  prometheus:
    monitor:
      enabled: true
      jobLabel: jobLabel
      additionalLabels:
        prometheus: main
      
  rbac:
    pspEnabled: false

prometheusOperator:
  serviceMonitor:
    additionalLabels:
      prometheus: main

prometheus:
  enabled: true
  serviceAccount:
    annotations:
      eks.amazonaws.com/role-arn: "arn:aws:iam::240195868935:role/prometheus"
  prometheusSpec:
    serviceMonitorSelector:
      matchLabels:
        prometheus: main
    serviceMonitorNamespaceSelector:
      matchLabels:
        monitoring: prometheus
    podMonitorSelector:
      matchLabels:
        prometheus: main
    podMonitorNamespaceSelector:
      matchLabels:
        monitoring: prometheus
    storageSpec: 
      volumeClaimTemplate:
        spec:
          storageClassName: gp2
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 20Gi
        selector: {}

grafana:
  enabled: true
  namespaceOverride: "monitoring"

kubeStateMetrics:
  enabled: true
kube-state-metrics:
  namespaceOverride: "monitoring"
  prometheus:
    monitor:
      enabled: true
      additionalLabels:
        prometheus: main

coreDns: 
  serviceMonitor:
    additionalLabels:
      prometheus: main


kubeControllerManager:
  serviceMonitor:
    additionalLabels:
      prometheus: main

kubeEtcd:
  serviceMonitor:
    additionalLabels:
      prometheus: main

kubeProxy:
  serviceMonitor:
    additionalLabels:
      prometheus: main

kubeScheduler:
  serviceMonitor:
    additionalLabels:
      prometheus: main

kubelet:
  serviceMonitor:
    additionalLabels:
      prometheus: main

kubeApiServer:
  serviceMonitor:
    additionalLabels:
      prometheus: main